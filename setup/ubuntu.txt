# Setting up the server

## Assumptions

NGINX and Postgres are installed and running, the former on HTTPS.

Caves site is configured at /etc/nginx/sites-available/caves.conf

## Initial Setup

(1) SSH to the VM as a user who has all permissions to the postgres 'caves' database.

(2) Install Node.js, yarn, and pm2:

sudo apt install npm
sudo npm install -g n
sudo n stable
hash -r
sudo npm install -g yarn
sudo npm install -g pm2

(3) Add the following to /etc/nginx/sites-available/caves.conf, at the very start of the file, before "server {" (e.g. "sudo vim /etc/nginx/sites-available/caves.conf").

upstream app_yourdomain {
    server 127.0.0.1:3000;
    keepalive 8;
}
    
(4) Add the following to /etc/nginx/sites-available/caves.conf before the final bracket of "server { ... }":

    location / {
        root /var/www/html;
        try_files $uri $uri/ /index.html =404;
    }

    location /api {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;

      proxy_pass http://127.0.0.1:3000/api;
      proxy_redirect off;
    }
    
(5) Run "sudo nginx -t" to check the syntax of caves.conf and correct any errors.

(6) sudo /etc/init.d/nginx restart

(7) You can test the setup at this point by going to https://caves.tacc.utexas.edu/api and making sure you get a "502 bad gateway" error.

(8) Create /var/www/.env based on the following (e.g via "sudo vim /var/www/.env"):

CAVESITE_TITLE=Texas Underground
CAVESITE_SUBTITLE=The University of Texas Biospeleological Collection
CAVESITE_BASE_URL=https://caves.tacc.utexas.edu
CAVESITE_PORT=3000
CAVESITE_SENDER_NAME=Alex Wild
CAVESITE_SENDER_EMAIL=alex.wild@utexas.edu
CAVESITE_HIDDEN_TABS=comma-delimited-names-of-tabs-you-want-to-hide

CAVESITE_LOG_DIR=/var/www/logs
CAVESITE_DB_HOST=localhost
CAVESITE_DB_PORT=5432
CAVESITE_DB_NAME=caves
CAVESITE_DB_USER=postgres-user-name
CAVESITE_DB_PASSWORD=postgres-user-password

SENDGRID_API_KEY=sender-sendgrid-key

## Build and Deploy the Website

(9) If you haven't done this step before, type:

    cd ~
    git clone https://github.com/ut-entomology/cavesite.git
    cd cavesite
   
Otherwise update the repo:

    cd ~/cavesite
    git pull
    
(10) From within ~/cavesite, type this in order to get the right dependency versions (don't use NPM):

    yarn
    
(11) From within ~/cavesite:

    ./bin/setup-db
    rm -rdf build  # this prevents intermittent build problems
    yarn build
    sudo ./bin/deploy
    
(12) From the client, use scp to copy the uploadable datafile to the host (temporary measure until integrated with GBIF):

scp uploadable.csv user@caves.tacc.utexas.edu:~/

(13) Load the data into the database:

cd /var/www
node build/tools/load-csv.js ~/uploadable.csv

(14) Only do one of these if not previously done. To set up the server for testing purposes and see console log output:

    cd /var/www
    sudo -u www-data node build/backend/server.js

To set up the server to run in the background and restart on reboots and crashes:

    sudo pm2 start --name server -u www-data --cwd /var/www node build/backend/server.js
    sudo pm2 startup

(15) To stop, start, and restart the server:

sudo pm2 stop server
sudo pm2 start server
sudo pm2 restart server