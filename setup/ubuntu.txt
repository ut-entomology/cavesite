# Setting up the server

## Assumptions

NGINX and Postgres are installed and running, the former on HTTPS.

Caves site is configured at /etc/nginx/sites-available/caves.conf

## Initial setup

(1) SSH to the VM as a user who has all permissions to the postgres caves database.

(2) sudo su

(3) apt install npm

(4) npm install -g n

(5) n stable

(6) hash -r

(7) npm install -g yarn

(8) Add the following to /etc/nginx/sites-available/caves.conf (e.g. using vim), at the very start of the file, before "server {".

    upstream app_yourdomain {
        server 127.0.0.1:3000;
        keepalive 8;
    }
    
(9) Add the following to /etc/nginx/sites-available/caves.conf before the final bracket of "server { ... }":

	location / {
		root /var/www/html;
		index index.html;
	}

    location /api {
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;

      proxy_pass http://127.0.0.1:3000/api;
      proxy_redirect off;
    }
    
(10) Run "nginx -t" to check the syntax of caves.conf and correct any errors.

(11) /etc/init.d/nginx restart

(12) Exit su mode

(13) You can test the setup at this point by going to https://caves.tacc.utexas.edu/api and making sure you get a "502 bad gateway" error.

(14) cd ~

(15) If you haven't done this step before, type:

    cd ~
    git clone https://github.com/ut-entomology/cavesite.git
    cd cavesite
   
Otherwise update the repo:

    cd ~/cavesite
    git pull
    
(16) From within ~/cavesite, type this in order to get the right dependency versions:

    yarn
    
(17) From within ~/cavesite:

	./bin/setup-db
	yarn build
	sudo ./bin/deploy
	
(19) Create /var/www/.env based on the following (e.g via "sudo vim /var/www/.env"):

CAVESITE_TITLE=Texas Underground
CAVESITE_SUBTITLE=The University of Texas Biospeleological Collection
CAVESITE_BASE_URL=https://caves.tacc.utexas.edu
CAVESITE_PORT=3000
CAVESITE_SENDER_NAME=Alex Wild
CAVESITE_SENDER_EMAIL=alex.wild@utexas.edu
CAVESITE_HIDDEN_TABS=comma-delimited-names-of-tabs-you-want-to-hide

CAVESITE_LOG_DIR=/var/www/logs
CAVESITE_DB_HOST=postgres-host-name
CAVESITE_DB_PORT=postgres-port
CAVESITE_DB_NAME=postgres-cave-database-name
CAVESITE_DB_USER=postgres-user-name
CAVESITE_DB_PASSWORD=postgres-user-password

SENDGRID_API_KEY=sender-sendgrid-key

(20) Use scp to copy the uploadable datafile to the host (temporary measure until integrated with GBIF):

scp uploadable.csv user@caves.tacc.utexas.edu:~/

(21) Load the data:

cd /var/www
node build/tools/load-csv.js ~/uploadable.csv

(22) Run the API server from within /var/www:

sudo -u www-data node build/backend/server.js

TODO: install node monitoring and restart
